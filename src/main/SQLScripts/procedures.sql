
DELIMITER $$
CREATE FUNCTION checkMotorist(uName VARCHAR(20))returns VARCHAR(20)
BEGIN
   DECLARE userFound VARCHAR(20) DEFAULT NULL;

	SELECT USER.username
	INTO userFound
	FROM USER
	JOIN MOTORIST
	WHERE MOTORIST.username = USER.username AND MOTORIST.username = uName;

	return userFound;
END$$

DELIMITER $$
CREATE FUNCTION checkMechanic(uName VARCHAR(20))returns VARCHAR(20)
BEGIN
   DECLARE userFound VARCHAR(20) DEFAULT NULL;

	SELECT USER.username
  INTO userFound
	FROM USER
	JOIN MECHANIC
	WHERE  MECHANIC.username = USER.username AND MECHANIC.username = uName;

	return userFound;
END$$


DELIMITER $$
CREATE PROCEDURE getMechanic(uName VARCHAR(20)) 

BEGIN
	SELECT * FROM USER JOIN MECHANIC ON USER.username = MECHANIC.username WHERE USER.USERNAME = uName;


END$$


DELIMITER $$
CREATE PROCEDURE getMotorist(uName VARCHAR(20)) 

BEGIN
	SELECT * FROM USER JOIN MOTORIST ON USER.username = MOTORIST.username WHERE USER.USERNAME = uName;


END$$

DELIMITER $$
CREATE PROCEDURE getVehicle(lNum VARCHAR(20)) 

BEGIN
	SELECT * FROM REGO WHERE license = lNum;


END$$

DELIMITER $$
CREATE PROCEDURE getRequest(rNum VARCHAR(20)) 

BEGIN
	SELECT * FROM SERVICE_REQUEST WHERE requestNum = rNum;


END$$

DELIMITER $$
CREATE PROCEDURE getReview(rNum VARCHAR(20)) 

BEGIN
	SELECT * FROM REVIEWS WHERE id = rNum;


END$$

DELIMITER $$
CREATE PROCEDURE getAvgRating(mName VARCHAR(20)) 

BEGIN
	SELECT ROUND(AVG(starRating)) FROM REVIEWS WHERE mechanicUsername = mName;


END$$

DELIMITER $$
CREATE PROCEDURE getAllRequest() 
BEGIN
	SELECT * FROM SERVICE_REQUEST;
END$$

DELIMITER $$
CREATE PROCEDURE getAllMechanicNames() 
BEGIN
	SELECT username FROM MECHANIC;
END$$

DELIMITER $$

CREATE PROCEDURE getMessage(mNum VARCHAR(20)) 

BEGIN
	SELECT * FROM MESSAGE WHERE id = mNum;


END$$

DELIMITER $$
CREATE PROCEDURE countRequests() 

BEGIN
	SELECT COUNT(*) FROM SERVICE_REQUEST;


END$$

DELIMITER $$
CREATE PROCEDURE countMessage() 

BEGIN
	SELECT COUNT(*) FROM MESSAGE;


END$$


DELIMITER ;
